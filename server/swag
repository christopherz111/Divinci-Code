const express = require('express');
const socketio = require('socket.io');
const http = require('http');
const PORT = process.env.PORT || 5000;
const { tilegen } = require('./tiles');
const router = require('./router');

const app = express();
const server = http.createServer(app);
const io = socketio(server);
const tiles = tilegen();
const tileColour = [];

io.on('connection', (socket) => {
	const newTiles = tiles.splice(-4);
	var temp = 0;
	for (var i = 0; i < newTiles.length - 1; i++) {
		for (var m = 0; m < newTiles.length - i - 1; m++) {
			if (newTiles[m].num > newTiles[m + 1].num) {
				temp = newTiles[m];
				newTiles[m] = newTiles[m + 1];
				newTiles[m + 1] = temp;
			}
			if (newTiles[m].num == newTiles[m + 1].num && newTiles[m].colour > newTiles[m + 1].colour) {
				temp = newTiles[m];
				newTiles[m] = newTiles[m + 1];
				newTiles[m + 1] = temp;
			}
		}
	}
	socket.on('startGame', () => {
		io.to(socket.id).emit('grabTiles', { newTiles });

		for (var i = 0; i < newTiles.length; i++) {
			tileColour.push(newTiles[i].colour);
		}
		socket.emit('grabTiles', { tileColour });
		//console.log(newTiles);
		//console.log(tileColour);
	});

	const randTile = tiles.splice(-1);
	socket.on('randomTile', () => {
		io.to(socket.id).emit('newRandNum', { num: randTile.num, colour: randTile });
		console.log(randTile);
	});

	socket.on('disconnect', () => {
		console.log('user has left!!!');
	});
});

app.use(router);

server.listen(PORT, () => console.log(`Server has started on port ${PORT}`));
